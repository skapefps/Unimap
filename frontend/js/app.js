// Gerenciamento de navega√ß√£o entre telas
class UnimapApp {
    constructor() {
        this.currentSection = 'aulas-mobile';
        this.currentBloco = null;
        this.currentAndar = null;
        this.init();
    }

    init() {
        console.log('üöÄ Inicializando UNIMAP App...');
        this.checkAuth();
        this.showSection('aulas-mobile');
        this.setupEventListeners();
        this.setupGlobalFunctions();
    }

    // ‚úÖ ADICIONE ESTE M√âTODO para configurar fun√ß√µes globais
    setupGlobalFunctions() {
        // Tornar os m√©todos dispon√≠veis globalmente
        window.showSection = (sectionId) => this.showSection(sectionId);
        window.showAndares = (bloco) => this.showAndares(bloco);
        window.showSalas = (andar) => this.showSalas(andar);
        window.openTab = (tabId) => this.openTab(tabId);
        window.logout = () => this.logout();
    }

    checkAuth() {
        const userData = localStorage.getItem('unimap_user');
        if (!userData) {
            console.log('‚ö†Ô∏è Usu√°rio n√£o autenticado');
            // N√£o redirecionar automaticamente para permitir teste
            // window.location.href = 'login.html';
            return;
        }
        
        this.user = JSON.parse(userData);
        this.updateUserInfo();
    }

    updateUserInfo() {
        const mobileUser = document.getElementById('mobileUserName');
        const desktopUser = document.getElementById('desktopUserName');
        const navUser = document.querySelector('.nav-user');
        
        if (mobileUser) mobileUser.textContent = this.user.nome;
        if (desktopUser) desktopUser.textContent = this.user.nome;
        if (navUser) navUser.textContent = this.user.nome;
    }

    setupEventListeners() {
        // Navega√ß√£o inicial baseada no tamanho da tela
        if (window.innerWidth >= 768) {
            this.showSection('aulas-desktop');
        }
    }

    showSection(sectionId) {
        console.log('üì± Mostrando se√ß√£o:', sectionId);
        
        // Esconder todas as se√ß√µes
        document.querySelectorAll('.section').forEach(section => {
            section.style.display = 'none';
            section.classList.remove('active');
        });

        // Mostrar se√ß√£o selecionada
        const targetSection = document.getElementById(sectionId);
        if (targetSection) {
            targetSection.style.display = 'block';
            targetSection.classList.add('active');
            this.currentSection = sectionId;
        }

        // Atualizar navega√ß√£o ativa
        this.updateActiveNav(sectionId);
        
        // Fechar menu mobile se estiver aberto
        this.closeMenu();
    }

    updateActiveNav(sectionId) {
        document.querySelectorAll('.nav-link').forEach(link => {
            link.classList.remove('active');
        });

        // Adicionar classe active ao link correspondente
        const correspondingLink = this.getCorrespondingNavLink(sectionId);
        if (correspondingLink) {
            correspondingLink.classList.add('active');
        }
    }

    getCorrespondingNavLink(sectionId) {
        const navMap = {
            'aulas-mobile': 'aulas',
            'aulas-desktop': 'aulas',
            'mapa-blocos': 'mapa',
            'professores': 'professores'
        };

        const targetNav = navMap[sectionId];
        if (targetNav) {
            return document.querySelector(`[onclick*="${targetNav}"]`);
        }
        return null;
    }

    showAndares(bloco) {
        this.currentBloco = bloco;
        const blocoTitle = document.getElementById('bloco-title');
        if (blocoTitle) {
            blocoTitle.textContent = `Bloco ${bloco}`;
        }
        this.showSection('mapa-andares');
    }

    showSalas(andar) {
        this.currentAndar = andar;
        const salaTitle = document.getElementById('sala-title');
        if (salaTitle && this.currentBloco) {
            salaTitle.textContent = `Bloco ${this.currentBloco} > ${andar}¬∞ Andar`;
        }
        this.showSection('mapa-salas');
    }

    openTab(tabId) {
        console.log('üìë Abrindo aba:', tabId);
        
        // Esconder todas as abas
        document.querySelectorAll('.tab-content').forEach(tab => {
            tab.classList.remove('active');
        });
        
        // Remover active de todos os bot√µes
        document.querySelectorAll('.tab-btn').forEach(btn => {
            btn.classList.remove('active');
        });

        // Mostrar aba selecionada
        const tabToShow = document.getElementById(tabId);
        if (tabToShow) {
            tabToShow.classList.add('active');
        }

        // Ativar bot√£o clicado
        if (event && event.target) {
            event.target.classList.add('active');
        }
    }

    // ‚úÖ ADICIONE ESTE M√âTODO para o menu mobile
    closeMenu() {
        const nav = document.getElementById('mobileNav');
        if (nav) {
            nav.classList.remove('active');
        }
    }

    logout() {
        console.log('üëã Fazendo logout...');
        localStorage.removeItem('unimap_user');
        localStorage.removeItem('unimap_token');
        window.location.href = 'login.html';
    }
}

// ‚úÖ MANTENHA as fun√ß√µes globais, mas mais robustas
function showSection(sectionId) {
    console.log('üéØ Mostrando se√ß√£o:', sectionId);
    
    // Esconder todas as se√ß√µes
    const allSections = document.querySelectorAll('.section, .mobile-section, .desktop-section');
    allSections.forEach(section => {
        section.style.display = 'none';
        section.classList.remove('active');
    });
    
    // Mostrar a se√ß√£o espec√≠fica
    let sectionToShow;
    
    // Verificar se √© mobile ou desktop
    if (window.innerWidth <= 768) {
        // MOBILE - PRIORIDADE para vers√£o mobile
        sectionToShow = document.getElementById(sectionId + '-mobile') || document.getElementById(sectionId);
    } else {
        // DESKTOP - PRIORIDADE para vers√£o desktop  
        sectionToShow = document.getElementById(sectionId + '-desktop') || document.getElementById(sectionId);
    }
    
    // Se n√£o encontrou, tenta o ID direto
    if (!sectionToShow) {
        sectionToShow = document.getElementById(sectionId);
    }
    
    if (sectionToShow) {
        sectionToShow.style.display = 'block';
        sectionToShow.classList.add('active');
        console.log('‚úÖ Se√ß√£o mostrada:', sectionToShow.id);
        
        // üî• CORRE√á√ÉO COMPLETA: For√ßar recarregamento das aulas em MOBILE e DESKTOP
        if ((sectionId === 'aulas' || sectionId === 'aulas-mobile' || sectionId === 'aulas-desktop') && typeof aulasManager !== 'undefined') {
            console.log('üîÑ Recarregando aulas automaticamente...');
            setTimeout(() => {
                aulasManager.carregarMinhasAulas().then(() => {
                    console.log('‚úÖ Aulas recarregadas com sucesso');
                }).catch(error => {
                    console.error('‚ùå Erro ao recarregar aulas:', error);
                });
            }, 150);
        }
        
        // üî• CORRE√á√ÉO: Tamb√©m recarregar professores quando abrir a se√ß√£o
        if ((sectionId === 'professores') && typeof professoresManager !== 'undefined') {
            console.log('üîÑ Recarregando professores...');
            setTimeout(() => {
                professoresManager.loadMeusProfessores(); // Recarregar favoritos
            }, 150);
        }
    } else {
        console.error('‚ùå Se√ß√£o n√£o encontrada:', sectionId);
    }
    
    // Fechar menu mobile se estiver aberto
    const mobileNav = document.getElementById('mobileNav');
    if (mobileNav) {
        mobileNav.classList.remove('active');
    }
}

function toggleMenu() {
    const nav = document.getElementById('mobileNav');
    if (nav) {
        nav.classList.toggle('active');
    }
}

function showAndares(bloco) {
    if (window.app) {
        window.app.showAndares(bloco);
    }
}

function showSalas(andar) {
    if (window.app) {
        window.app.showSalas(andar);
    }
}

function openTab(tabId) {
    if (window.app) {
        window.app.openTab(tabId);
    }
}

function logout() {
    if (window.app) {
        window.app.logout();
    } else {
        localStorage.removeItem('unimap_user');
        localStorage.removeItem('unimap_token');
        window.location.href = 'login.html';
    }
}

// ‚úÖ ADICIONE fun√ß√µes para aulas (que est√£o no HTML)
function filtrarAulas(filtro) {
    console.log('üîç Filtrando aulas:', filtro);
    alert(`Filtrando por: ${filtro} - Em desenvolvimento`);
}

function filtrarAulasDesktop(filtro) {
    console.log('üîç Filtrando aulas desktop:', filtro);
    alert(`Filtrando por: ${filtro} - Em desenvolvimento`);
}

function verDetalhesAula(idAula) {
    console.log('üìñ Ver detalhes da aula:', idAula);
    alert(`Detalhes da aula ${idAula}\n\nEm desenvolvimento...`);
}

function abrirMapaSala(bloco, andar, sala) {
    console.log('üó∫Ô∏è Abrindo mapa para:', bloco, andar, sala);
    
    // Navegar para o mapa
    showSection('mapa-blocos');
    
    // Navegar automaticamente para a sala
    setTimeout(() => {
        showAndares(bloco);
        setTimeout(() => {
            showSalas(andar);
        }, 300);
    }, 300);
}

// ‚úÖ Inicializar app quando a p√°gina carregar
window.addEventListener('DOMContentLoaded', () => {
    console.log('üìÑ DOM carregado, inicializando app...');
    window.app = new UnimapApp();
});

// Detectar mudan√ßa de tamanho de tela
window.addEventListener('resize', () => {
    if (window.app) {
        if (window.innerWidth >= 768 && window.app.currentSection === 'aulas-mobile') {
            window.app.showSection('aulas-desktop');
        } else if (window.innerWidth < 768 && window.app.currentSection === 'aulas-desktop') {
            window.app.showSection('aulas-mobile');
        }
    }
});
// üîê FUN√á√ÉO PARA VERIFICAR E MOSTRAR OP√á√ïES DE ADMIN
function checkAndShowAdminOptions() {
    console.log('üîç Verificando permiss√µes de admin...');
    
    const userData = localStorage.getItem('userData');
    
    if (!userData) {
        console.log('‚ö†Ô∏è Nenhum usu√°rio logado');
        hideAdminOptions();
        return false;
    }
    
    try {
        const user = JSON.parse(userData);
        console.log('üë§ Usu√°rio:', user.nome, '- Tipo:', user.tipo);
        
        const isAdmin = user.tipo === 'admin';
        
        if (isAdmin) {
            showAdminOptions();
            updateUserBadge(user);
            console.log('‚úÖ Admin detectado - Mostrando dashboard');
        } else {
            hideAdminOptions();
            console.log('‚ÑπÔ∏è Usu√°rio normal - Ocultando dashboard');
        }
        
        return isAdmin;
        
    } catch (error) {
        console.error('‚ùå Erro ao verificar permiss√µes:', error);
        hideAdminOptions();
        return false;
    }
}

// üëë MOSTRAR OP√á√ïES DE ADMIN
function showAdminOptions() {
    const adminLinks = document.querySelectorAll('.admin-only');
    adminLinks.forEach(link => {
        link.style.display = 'block';
    });
}

// üö´ OCULTAR OP√á√ïES DE ADMIN
function hideAdminOptions() {
    const adminLinks = document.querySelectorAll('.admin-only');
    adminLinks.forEach(link => {
        link.style.display = 'none';
    });
}

// üè∑Ô∏è ATUALIZAR BADGE DO USU√ÅRIO
function updateUserBadge(user) {
    const desktopUser = document.getElementById('desktopUserName');
    const mobileUser = document.querySelector('.nav-user');
    
    if (user.tipo === 'admin') {
        if (desktopUser) {
            desktopUser.innerHTML = `${user.nome} <span class="user-type-badge admin">ADMIN</span>`;
        }
        if (mobileUser) {
            mobileUser.innerHTML = `${user.nome} <span class="user-type-badge admin">ADMIN</span>`;
        }
    } else {
        if (desktopUser) {
            desktopUser.textContent = user.nome;
        }
        if (mobileUser) {
            mobileUser.textContent = user.nome;
        }
    }
}

// üîí PROTEGER P√ÅGINAS ADMIN
function protectAdminPages() {
    if (!window.location.pathname.includes('admin')) return;
    
    const userData = localStorage.getItem('userData');
    
    if (!userData) {
        window.location.href = 'login.html';
        return;
    }
    
    try {
        const user = JSON.parse(userData);
        
        if (user.tipo !== 'admin') {
            alert('‚ùå Acesso restrito a administradores!');
            window.location.href = 'index.html';
        }
    } catch (error) {
        console.error('Erro ao verificar permiss√µes:', error);
        window.location.href = 'login.html';
    }
}

// üìÑ ATUALIZAR A INICIALIZA√á√ÉO DO APP
document.addEventListener('DOMContentLoaded', function() {
    console.log('üìÑ DOM carregado, inicializando app...');
    
    // üîê Verificar autentica√ß√£o e permiss√µes
    const userData = localStorage.getItem('userData');
    const token = localStorage.getItem('authToken');
    
    if (userData && token) {
        try {
            const user = JSON.parse(userData);
            console.log('üëã Usu√°rio logado:', user.nome);
            
            // ‚úÖ ATUALIZAR NOME DO USU√ÅRIO NA INTERFACE
            updateUserInterface(user);
            
            // ‚úÖ VERIFICAR SE √â ADMIN E MOSTRAR DASHBOARD
            checkAndShowAdminOptions();
            
        } catch (error) {
            console.error('‚ùå Erro ao carregar usu√°rio:', error);
        }
    } else {
        console.log('üë§ Usu√°rio n√£o autenticado');
    }
    
    // üîí PROTEGER P√ÅGINAS ADMIN (se estiver em uma)
    protectAdminPages();
    
    // üöÄ INICIALIZAR MANAGERS
    if (typeof aulasManager !== 'undefined') {
        aulasManager.init();
    }
    
    if (typeof professoresManager !== 'undefined') {
        setTimeout(() => {
            professoresManager.init();
        }, 100);
    }
});

// üë§ ATUALIZAR INTERFACE COM DADOS DO USU√ÅRIO
function updateUserInterface(user) {
    // Desktop
    const desktopUserName = document.getElementById('desktopUserName');
    const mobileUserName = document.getElementById('mobileUserName');
    const navUser = document.querySelector('.nav-user');
    
    if (desktopUserName) desktopUserName.textContent = user.nome;
    if (mobileUserName) mobileUserName.textContent = user.nome;
    if (navUser) navUser.textContent = user.nome;
}

// üö™ FUN√á√ÉO LOGOUT (se n√£o existir)
function logout() {
    if (typeof authManager !== 'undefined') {
        authManager.logout();
    } else {
        // Fallback simples
        localStorage.removeItem('authToken');
        localStorage.removeItem('userData');
        window.location.href = 'login.html';
    }
}